
    /*int a = 0;
    int b = 0;
    if(s1.length()!=0)
    {
      a = Integer.parseInt(s1);
    }
    if(s2.length()!=0)
    {
      b = Integer.parseInt(s2);
    }
  
    int c = a+b;
    String res = Integer.toString(c);
    
    return res;*/


import java.util.*;
class Main{
  // C++ program to check if a given string 
// is sum-string or not 
//C++ TO JAVA CONVERTER WARNING: The following #include directive was ignored:
//#include <bits/stdc++.h>

// this is function for finding sum of two 
// numbers as string 
private static String string_sum(String s1, String s2)
{
  int a = 0;
    int b = 0;
    if(s1.length()!=0)
    {
      a = Integer.parseInt(s1);
    }
    if(s2.length()!=0)
    {
      b = Integer.parseInt(s2);
    }
  
    int c = a+b;
    String res = Integer.toString(c);
    //System.out.println("Res"+" "+res);
    return res;
	
}

// Returns true of two substrings of ginven 
// lengths of str[beg..] can cause a positive 
// result. 
private static boolean checkSumStrUtil(String str, int beg, int len1, int len2)
{

	// Finding two substrings of given lengths 
	// and their sum 
	String s1 = str.substring(beg, beg + len1);
	String s2 = str.substring(beg + len1, beg + len1 + len2);
	String s3 = string_sum(s1, s2);

	int s3_len = s3.length();

	// if number of digits s3 is greater then 
	// the available string size 
	if (s3_len > str.length() - len1 - len2 - beg)
	{
		return false;
	}

	// we got s3 as next number in main string 
	if (s3.equals(str.substring(beg + len1 + len2, beg + len1 + len2 + s3_len)))
	{

		// if we reach at the end of the string 
		if (beg + len1 + len2 + s3_len == str.length())
		{
			return true;
		}

		// otherwise call recursively for n2, s3 
		return checkSumStrUtil(str, beg + len1, len2, s3_len);
	}

	// we do not get s3 in main string 
	return false;
}

// Returns true if str is sum string, else false. 
private static boolean isSumStr(String str)
{
	int n = str.length();

	// choosing first two numbers and checking 
	// whether it is sum-string or not. 
	for (int i = 1; i < n; i++)
	{
		for (int j = 1; i + j < n; j++)
		{
			if (checkSumStrUtil(str, 0, i, j))
			{
				return true;
			}
		}
	}

	return false;
}

// Driver code 
public static void main(String args[])
{
	System.out.print(isSumStr("1212243660"));
	System.out.print("\n");
	System.out.print(isSumStr("123456787"));
	
}

}