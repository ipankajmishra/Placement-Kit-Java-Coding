import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the activityNotifications function below.
    static int activityNotifications(int[] expenditure, int d) {
        //int d=3;
        int i=d;
        int count=0;
        //int[] expenditure={10,20,30,40,50};
        while(i-d<=expenditure.length-d-1)
        {
            int[] temp=new int[d];
            for(int j=i-d;j<i;j++)
            {
                temp[j-i+d]=expenditure[j];
                
            }
            Arrays.parallelSort(temp);
            /*for(int p=0;p<temp.length;p++)
            {
                System.out.print(temp[p] + " ");
            }*/
            if(temp.length%2 !=0) //odd
            {
                //System.out.println()
                if(2*temp[temp.length/2]<=expenditure[i])
                {
                    count+=1;
                }
            }
            System.out.println();
            i++;
        }
       //System.out.println(count);
       return count;

    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] nd = scanner.nextLine().split(" ");

        int n = Integer.parseInt(nd[0]);

        int d = Integer.parseInt(nd[1]);

        int[] expenditure = new int[n];

        String[] expenditureItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int expenditureItem = Integer.parseInt(expenditureItems[i]);
            expenditure[i] = expenditureItem;
        }

        int result = activityNotifications(expenditure, d);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
