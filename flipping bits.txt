import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the flippingBits function below.
    static Long flippingBits(long n) {
     byte[] binary = new byte[32];
     int index = 0;
     long copyOfInput = n;
     while (copyOfInput > 0)
     { 
         binary[index++] = (byte) (copyOfInput % 2);
         copyOfInput = copyOfInput / 2;
         }
    for(int j=31;j>=0;j--)
    {
        System.out.print(binary[j]);
    }
    System.out.println();
    for(int k=0;k<32;k++)
    {
        if(binary[k]==1)
        {
            binary[k]=0;
        }
        else{
           binary[k]=1; 
        }
    }
    String s1="";
    for(int j=31;j>=0;j--)
    {
        Byte b1=new Byte(binary[j]);
        s1=s1+""+b1.toString();
        System.out.print(binary[j]);
    }
    System.out.println();
    long y=Long.parseLong(s1,2);
    //System.out.println(y);
      return y;  
        

    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int q = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int qItr = 0; qItr < q; qItr++) {
            long n = scanner.nextLong();
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            long result = flippingBits(n);

            bufferedWriter.write(String.valueOf(result));
            bufferedWriter.newLine();
        }

        bufferedWriter.close();

        scanner.close();
    }
}
